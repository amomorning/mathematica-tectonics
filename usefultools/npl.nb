(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1376502,      24627]
NotebookOptionsPosition[   1371493,      24528]
NotebookOutlinePosition[   1371889,      24544]
CellTagsIndexPosition[   1371846,      24541]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Model", "Section",
 CellChangeTimes->{{3.864373939484454*^9, 
  3.864373942604813*^9}},ExpressionUUID->"7bd0fe77-4988-460f-859a-\
7e8037afe23f"],

Cell[CellGroupData[{

Cell["Resource", "Subsubsection",
 CellChangeTimes->{{3.864374603927106*^9, 
  3.864374611995866*^9}},ExpressionUUID->"9bfdddd3-56cb-4dc1-b3ff-\
7f69b538d683"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", " ", "=", 
  RowBox[{
  "NetModel", "[", "\"\<GPT2 Transformer Trained on WebText Data\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.864373946385908*^9, 3.864373950432455*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"388d6b69-388a-4b1e-a203-6afcafa14795"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|
                    "Weights" -> NetArray[<|
                    "Name" -> "Weights", "Array" -> Automatic, "Dimensions" -> 
                    Automatic|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50257, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 1024, "$Length" -> 
                    NeuralNetworks`LengthVar[2075513245]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 1024, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"]}|>, 
                    "decoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{768}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Type" -> 
                    "Function", "Function" -> Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[75402943]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> False, "$Version" -> 
                    "13.0.3", 
                    "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart = {
                    "Nodes", "decoder"}, 
                   NeuralNetworks`Private`NetChain`part = {
                    "Nodes", "decoder"}, 
                   NeuralNetworks`Private`NetChain`selected = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {12, 64}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 768, "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {3072}, 
                    "$OutputSize" -> 3072, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 3072, 
                    "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[
                    None]|>, "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{768}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"]
                     -> NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"embedding\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"decoder\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "13", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50257, 768}]|>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {
                    361., {433.172119140625, 438.827880859375}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86437395446973*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"585c9411-8f27-454c-9d70-41c5b025fa0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lm", "=", 
  RowBox[{"NetModel", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<GPT2 Transformer Trained on WebText Data\>\"", ",", 
     RowBox[{"\"\<Task\>\"", "->", "\"\<LanguageModeling\>\""}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8643739678970957`*^9, 3.864373983424704*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"44e6463b-e630-46bf-81c4-da8f3775bb4c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|
                    "Weights" -> NetArray[<|
                    "Name" -> "Weights", "Array" -> Automatic, "Dimensions" -> 
                    Automatic|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50257, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 1024, "$Length" -> 
                    NeuralNetworks`LengthVar[2075513245]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 1024, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"]}|>, 
                    "decoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{768}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "last" -> <|
                    "Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "classifier" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Name" -> "Weights", "Array" -> Automatic, "Dimensions" -> 
                    Automatic|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50257}, "$OutputSize" -> 50257, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50257}, NeuralNetworks`RealT]|>|>,
                     "probabilities" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50257}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Type" -> 
                    "Function", "Function" -> Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[75402943]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> False, "$Version" -> 
                    "13.0.3", 
                    "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\" t\"", "\" a\"", 
                    Skeleton[50254], "\"\""}, "InputDepth" -> 1, "Dimensions" -> 
                    50257, "$Rank" -> 0, "$Version" -> "13.0.3", "Multilabel" -> 
                    False|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"embedding\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"decoder\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "13", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"last\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"classifier\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"probabilities\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50257, 768}]|>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.864373985507905*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"b0fc581f-848e-4511-a3f5-45d1f576f724"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Information", "Subsubsection",
 CellChangeTimes->{{3.864374615277626*^9, 
  3.864374623624033*^9}},ExpressionUUID->"6ce8d48f-8c70-470d-836f-\
a99abd51e4df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"net", ",", "\"\<ArraysElementCounts\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.864374626457232*^9, 3.864374631139138*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"f8813dba-7578-41bb-b9cd-722f2d4d84da"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     RowBox[{
      TagBox["NetArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GridBox[{{
                  RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["\"Weights\"", HoldForm], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["Automatic", HoldForm], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GridBox[{{
                  RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["\"Weights\"", HoldForm], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["Automatic", HoldForm], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     NetArray[<|
      "Name" -> "Weights", "Array" -> Automatic, "Dimensions" -> Automatic|>],
     
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "\[Rule]", "38597376"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "13", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "13", ",", "\<\"Scaling\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"embedding\"\>", ",", "\<\"embeddingpos\"\>", 
      ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", "786432"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "2", ",", "\<\"norm\"\>", 
      ",", "\<\"Scaling\"\>"}], "}"}], "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "3072"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "2", ",", "\<\"linear1\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]", "768"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "2", ",", "\<\"linear2\"\>", 
      ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], "\[Rule]", 
    "2359296"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "1", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"attention\"\>",
       ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"attention\"\>",
       ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"attention\"\>",
       ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"attention\"\>",
       ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"attention\"\>",
       ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"attention\"\>",
       ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"attention\"\>",
       ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "10", ",", "1", ",", "\<\"attention\"\>",
       ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"attention\"\>",
       ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"attention\"\>",
       ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"attention\"\>",
       ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"attention\"\>",
       ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"attention\"\>",
       ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"attention\"\>",
       ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"attention\"\>",
       ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "11", ",", "1", ",", "\<\"attention\"\>",
       ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"attention\"\>",
       ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"attention\"\>",
       ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"attention\"\>",
       ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"attention\"\>",
       ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"attention\"\>",
       ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"attention\"\>",
       ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"attention\"\>",
       ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], 
    "\[Rule]", "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "12", ",", "1", ",", "\<\"attention\"\>",
       ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "2", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "3", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "4", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "5", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "6", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "7", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "8", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"attention\"\>", 
      ",", "1", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"attention\"\>", 
      ",", "2", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"attention\"\>", 
      ",", "4", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Biases\"\>"}], "}"}], "\[Rule]",
     "768"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"decoder\"\>", ",", "9", ",", "1", ",", "\<\"attention\"\>", 
      ",", "6", ",", "\<\"Net\"\>", ",", "\<\"Weights\"\>"}], "}"}], 
    "\[Rule]", "589824"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.864374632031682*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"7d3ca05a-a6c1-484b-adaa-b3acfc827ec7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structure", "Subsubsection",
 CellChangeTimes->{{3.8643746210169992`*^9, 
  3.864374625076231*^9}},ExpressionUUID->"b0a0f022-63f5-4661-a496-\
2480d1497100"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"net", ",", " ", "\"\<embedding\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8643741537647457`*^9, 3.864374156081538*^9}, {
  3.86437422214432*^9, 3.864374224849004*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ad77fcea-1c24-41cb-b85e-c7dbb6fa4938"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
                    "\"\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"embedding..\"", "\"embeddingtokens\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "embeddingtokens", "Tooltip"]& ], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"posembed\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -13.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"embedding..\"", "\"embeddingpos\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "embeddingpos", "Tooltip"]& ], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -13.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"inputComb..\"", "\"inputCombine\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "inputCombine", "Tooltip"]& ], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, StripOnInput -> 
                    False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    StyleBox[
                    "\"n\"", StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-3.4499999852628056`, 
                    0.5500000924423946}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    StyleBox[
                    "\"n\"", StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{1.473719296596348*^-7, 
                    5.499999999999999}, {-1.9111110843162136`, 
                    1.0000000512080252`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794896301751784`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193393399298`*^-7, 
                    5.499999999999999}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794897078907816`*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"n\"", StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.679489702911785*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQPS00/c///+wH8v9NFmVg+GD/SsXh0Ov57Adc59iC
+R7zGkp2mbIf8FO6JwLirzuoIZxzkO1Ax4RSMF+m32IegzPbgc/PmMH8KWwb
RCt2sR6YoNopDOKLaPRXXlJnPRDnwwrmz/189SR/N8uBuOgKIRDfILOFzeAJ
84EJQY8EQfxTHbP0jY2ZD3wydAbzM2qfnFOvZTqQ1zpfAMTnKNLLkznOeODl
jd/8IP7KtApeQUHGA2k6EWC+e/ShNazRDAce1m/hA/HPzJeY8cXz//7YywJg
Pk/nmmt37/7df1MtlxfE9ypyED1e+Gd/SNVJHhC/I/pK8AbW3/svnFUF84+5
ZEyaOfPnfh/FJm4Q/0/zlCfzzX/sX8/wmAvEV8j/GPvg5bf9D7/7gPnGbPX/
ojZ83f+Q7QAniG/iaXuMv/vL/nW6NmC+soXO1n+Vn/d75xzkAPEZLnufVq/9
tH/bIX8w/4zkHI7uKR/3fzB4zg7it/HI5moc+LD/x7Z2MD8mbO7H///f7z8f
YgjmAwBfZMKG
                    "]], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "1024", "\"\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 1024, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4499999852628056`,
                     0.5500000924423946}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.9111110843162136`,
                     1.0000000512080252`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, -2.381768560155706*^-9}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "1024", "\"\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 1024, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]]], 
                    InsetBox[
                    StyleBox[
                    "\"E\"", StripOnInput -> False, FontSize -> 12, 
                    FontWeight -> Bold], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"embeddingtokens\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "EmbeddingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["embeddingtokens", Bold], 
                    Style[
                    EmbeddingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"SI\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 12, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-2.999999999999999, 
                    8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"posembed\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "SequenceIndicesLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["posembed", Bold], 
                    Style[
                    SequenceIndicesLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]], 
                    InsetBox[
                    StyleBox[
                    "\"E\"", StripOnInput -> False, FontSize -> 12, 
                    FontWeight -> Bold], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"embeddingpos\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "EmbeddingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["embeddingpos", Bold], 
                    Style[
                    EmbeddingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 12, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"inputCombine\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["inputCombine", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999973205102, 
                    1.0000000803846907`}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 21, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{25., 26.5}, {27.5, 15.}}, 
                    ImageSize -> {271.5000014737193, 97.50000147371931}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
                    "\"\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|
                    "Weights" -> NetArray[<|
                    "Name" -> "Weights", "Array" -> Automatic, "Dimensions" -> 
                    Automatic|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50257, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 1024, "$Length" -> 
                    NeuralNetworks`LengthVar[2075513245]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 1024, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "embeddingtokens"], 
                    NeuralNetworks`NetPath["Nodes", "posembed"], 
                    NeuralNetworks`NetPath["Nodes", "embeddingpos"], 
                    NeuralNetworks`NetPath["Nodes", "inputCombine"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "embeddingtokens"], 
                    NeuralNetworks`NetPath["Nodes", "posembed"], 
                    NeuralNetworks`NetPath["Nodes", "embeddingpos"], 
                    NeuralNetworks`NetPath["Nodes", "inputCombine"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50257, 768}]|>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {0., {0., 6.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8643741564626627`*^9, 3.864374225758485*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"0d9134bb-019b-44d7-aa42-c0b717a0503e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"net", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<decoder\>\"", ",", "1", ",", "1"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.864374091800199*^9, 3.864374103428644*^9}, {
  3.864374135717929*^9, 3.8643741472008553`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"925f9e6f-9d4b-4b96-80e9-5caeebac8e08"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = 5}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"add\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"norm\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -13.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"attention\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, StripOnInput -> 
                    False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737192965963332`*^-7, 
                    5.499999999999999}, {-2.3555555287606578`, 
                    1.0000000631168682`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896301751513`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193393399298`*^-7, 
                    5.499999999999999}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794897078907816`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{0.01223370604179594, 
                    5.49998639420467}, {-2.4858549341298173`, 
                    0.0975237461217077}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999975262190308, -0.0022243101894174437`}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{-0.012233411298654684`, 
                    5.4999863948602625`}, {-2.4858549393560914`, \
-0.09752361290525355}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.9999975263382296,
                     0.0022242565997553972`}]}, StripOnInput -> False, 
                    FontSize -> 8, FontWeight -> "Thin", FontColor -> 
                    GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQ/fc/CPAfSEqScgw+WmN3au6/oq9z+A/8+7b/0LJD
K+xvRTDpPtTkP/B77U/hO4d32WsbcusdXsZ34JCq4Kezk4/a71CTLJstzHeA
79WbDM9j5+w7LHVYswp4D3wQ9DDfUHPFfkamy229vTwH5mTWNnaK3bJ/ti3x
x8uf3AfY7Lo9IyQe2JcrtsTMVuM+sGAJ57ZJqY/t3VauZnd25jow+4Ul25dP
z+xZo91VJu/nPDAtcZGz/c0X9tuU+2Z/M+U88Pv+qsqQtlf2gcwNubnLOA6c
Sg5eYfzrtf2NnzKzvgtwHGB8O/v8HZO39n7sqYpTS9kPLKxuee9v9s5+g3YE
s9sVtgMr+Xk5ev+9s/+X9s2eS5ftgNRKU8kpve/trXbaX39Yz3rgm/s/pdTH
7+1PdczSNzZmPvDJ0FmQgeGDfUbtk3PqtUwH8lrnC4D4HEV6eTLHGQ+8vPGb
H8RfmVbBKyjIeCBNJwLMd48+tIY1muHAw/otfCD+mfkSM754/t8fe1kAzOfp
XHPt7t2/+2+q5fKC+F5FDqLHC//sD6k6yQPid0RfCd7A+nv/hbOqYP4xl4xJ
M2f+3O+j2MQN4v9pnvJkvvmP/esZHnOB+Ar5H2MfvPy2/+F3HzDfmK3+X9SG
r/sfsh3gBPFNPG2P8Xd/2b9O1wbMV7bQ2fqv8vN+75yDHCA+w2Xv0+q1n/Zv
O+QP5p+RnMPRPeXj/g8Gz9lB/DYe2VyNAx/2/9jWDubHhM39+P//+/3nQwzB
fADJZBg4
                    "]], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.9999999999999996`, 
                    8.038469108735355*^-8}, {-2.8943858342499404`, 
                    0.05175101809283572}, {-2.8674591720747205`, 
                    0.06393577666167718}, {-2.840145207346784, 
                    0.07429403780274364}, {-2.812507112297079, 
                    0.08280184474258458}, {-2.784608808811013, 
                    0.0894395204716481}, {-2.7565148205887677`, 
                    0.09419171325362367}, {-2.728290123913715, 
                    0.09704743213121429}, {-2.699999997374099, 
                    0.09800007234622214}, {-2.2999999973741, 
                    0.0980000616282633}, {-2.2717098708855357`, 
                    0.09704741989719325}, {-2.243485174363521, 
                    0.094191699507047}, {-2.215391186395945, 
                    0.08943950521952045}, {-2.187492883265591, 
                    0.08280182799539249}, {-2.1598547886718165`, 
                    0.0742940195744316}, {-2.132540824498977, 
                    0.06393575696961566}, {-2.1056141629767366`, 
                    0.051750996957779766`}, {-1.9999999999999993`, 
                    5.3589794131714496`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.9999999999999996`, 
                    8.038469108735355*^-8}, {-2.894385837023262, \
-0.05175086298329466}, {-2.8674591755010215`, -0.06393562299513059}, \
{-2.840145211328182, -0.07429388559994653}, {-2.812507116734408, \
-0.08280169402090741}, {-2.784608813604054, -0.08943937124503518}, \
{-2.756514825636478, -0.09419156553256175}, {-2.728290129114463, \
-0.097047285922708}, {-2.700000002625899, -0.09799992765377803}, \
{-2.3000000026258998`, -0.09799993837173689}, {-2.2717098760862835`, \
-0.09704729815672905}, {-2.2434851794112314`, -0.09419157927913843}, \
{-2.215391191188986, -0.08943938649716283}, {-2.1874928877029203`, \
-0.08280171076809918}, {-2.159854792653215, -0.07429390382825822}, \
{-2.132540827925278, -0.06393564268719178}, {-2.105614165750058, \
-0.051750884118350306`}, {-1.9999999999999993`, 5.3589794131714496`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Query\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Query"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.3555555287606578`,
                     1.0000000631168682`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888946, -2.381768560155706*^-9}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4858549341298173`,
                     0.0975237461217077}, {-0.25, 0}, 
                    Offset[8], {
                    0.42829012648856324`, -0.0009526524490288957}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-2.4858549393560914`, \
-0.09752361290525355}, {-0.25, 0}, 
                    Offset[8], {0.4282901265396153, 0.0009526294970489818}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Query\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Query"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 12, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"add\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["add", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]], 
                    InsetBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, FontSize -> 12, 
                    FontWeight -> Bold], {-2.999999999999999, 
                    8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"norm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NormalizationLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["norm", Bold], 
                    Style[
                    NormalizationLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-1.9999999999999993`, 5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"attention\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["attention", Bold], 
                    Style[NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 8, 25}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageSize -> {278.0000014737193, 108.3638021812167}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    Part[<|"Nodes" -> <|
                    "norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{768}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    0.125 #& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "ScoringNet" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", 
                    "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "add"], 
                    NeuralNetworks`NetPath["Nodes", "norm"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "add"], 
                    NeuralNetworks`NetPath["Nodes", "norm"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {333., {191., 196.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8643741041855173`*^9, 3.864374148079784*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"3b829dce-1729-460f-94a3-9be27e0746f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"net", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<decoder\>\"", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{3.8643741622218657`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"adee2219-f6f3-487e-a3b7-e4ababd5a3f6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = 5}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"add\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -13.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"norm\"", 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-5.000000026794895, -0.9999998660255145}], 
                    
                    Offset[{
                    0, -13.5}, {-5.000000026794895, -0.9999998660255145}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {0., 0.}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"gelu\"", 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-3.000000026794896, -0.9999999196153085}], 
                    
                    Offset[{
                    0, -13.5}, {-3.000000026794896, -0.9999999196153085}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"linear2\"", 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-2.0000000267948965`, -0.9999999464102056}], 
                    
                    Offset[{
                    0, -15.5}, {-2.0000000267948965`, -0.9999999464102056}]], 
                    
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"linear1\"", 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{
                    0, -15.5}, {-4.000000026794896, -0.9999998928204116}]], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, StripOnInput -> 
                    False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{1.473719336601469*^-7, 
                    5.499999999999999}, {-3.7333333333333325`, 
                    1.0003428224203995`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794897029117617`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{3.889087400733703, 
                    3.8890871923183172`}, {-5.450000014737192, \
-0.549999853967811}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.707106762239694, -0.7071068001334005}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"3072\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193393399298`*^-7, 
                    5.499999999999999}, {-2.4500000267948963`, \
-0.9999999343525019}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907816`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"3072\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999999}, {-3.4500000267948963`, \
-0.9999999075576049}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.67948969678855*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-1.450000012057703, \
-0.44999996114739915`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"768\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193393399303`*^-7, 
                    5.499999999999999}, {-4.450000026794895, \
-0.999999880762708}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907825`*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    LineBox[CompressedData["
1:eJwtk38s1GEcx4/cKYXz4+5S+iEqxmm0RlYfK/2YKbVsIaqLzIkOkROu7s6d
SKkdqauLtahNDbXSJvX9SJdV00nKzY/Rr8MS4ihXqO8zr+3Z88/zeT+v9549
LjHJ++LMGQyG3/9F7zOzNDx8/ep9ykyxEu7ED32e0PEw5J5rdItQCfsrFm3q
ucZDT7W/gL1RCVZ1goV1Ah4eu2QvabZQAmoG9kpdeMhU3X8w9kYBORH0ABcZ
ZRwzVZECNg8Ww2AxFw88BGHlLgUw9jw2nN3ORfsPXgNeLAW8KbBhLh7joDuj
T+r+JBeuqmk4qNkQ4Xs1MRcM9DhwMHDUd7TRKRf8ir74F31xxK9V1tXfm+WQ
T3DE/LiBRE6GHDrkfL2c74ieK5s8At3ksFrStlbS5oC6zhv9wjYZZIhpHDDt
cmalSioDbapzc6qzA3L3hsU2eMuAk9TITWq0x3orbxdDt3TOxw7L2xJKuirP
QD/xsUPDzhXsdeZnwJ/4sNH7aXuh/NBpOEt82Cj2PWf5sV4y58PGZ3cCcz14
EthlqthjqrBF1rKJmZy0HBgaprHBUFVVVqsuG87Tcf42WGopmHT1ygZPPR1g
jb05nBPi/CzwWU+zEFkBri/y0jNBt5YuaIW7a/SBna1iIHWaF2CpW9ETPl8M
bDuaBdirDvKTFWRANTOqlhk1H9fYTj1o/3YSQomPJYoU1d7uW08C0RlmYd1U
bFV2WTpcID4snBY5rdGZ0oBPfJi44+vbm6vC08CX+MxD0c3ucZ+gVHhHfMzx
EVeVrCxPgRTiY4Ym3sWP938lz/mY4QVzU0tErQhqiA8Dl/44qp0VHgeNMbjc
GDxLVXXoGm67JEFXD800FfA84OHuzmOwhI5L/Uu9uld516hKgMhaOuAPFXmF
fet6iBCukPeaogZk2de2WsRDi177vdzvN1UfHi0wexkHY02r4voGJykHC4+m
EfVRINfXTlDGvE/PraWxwCwTtdgWGqmIPuXhqMwYMJ4/2DBzapzaxuaq9fIj
c/3GqDrSTwAa+njJTyq6f1zbpDkM4UdC091xlDoQet3QtfwQTJP/NULFxCzZ
EqaNhn/SvLHe
                    "]], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-5.000000026794895, \
-0.9999998660255145}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-2.0000000267948965`, -0.9999999464102056}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3072\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]3072\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.000000026794896, -0.9999998928204116}, \
{-3.000000026794896, -0.9999999196153085}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3072\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]3072\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.0000000267948965`, -0.9999999464102056}, \
{-0.9999999999999997, 2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.000000026794895, -0.9999998660255145}, \
{-4.000000026794896, -0.9999998928204116}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.7333333333333325`,
                     1.0003428224203995`*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888902, -2.3817686248104587`*^-9}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.450000014737192, \
-0.549999853967811}, {-0.25, 0}, 
                    Offset[8], {0.999999973205103, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-2.4500000267948963`, \
-0.9999999343525019}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3072\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]3072\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-3.4500000267948963`, \
-0.9999999075576049}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3072\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]3072\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-1.450000012057703, \
-0.44999996114739915`}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.450000026794895, \
-0.999999880762708}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999991, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 12, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"add\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["add", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-5.000000026794895, -0.9999998660255145}], 
                    
                    Offset[{-10.5, -10.5}, {-5.000000026794895, \
-0.9999998660255145}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-5.000000026794895, -0.9999998660255145}], 
                    
                    Offset[{10.5, 
                    10.5}, {-5.000000026794895, -0.9999998660255145}]]], 
                    InsetBox[
                    StyleBox["\"N\"", StripOnInput -> False, FontSize -> 12, 
                    FontWeight -> 
                    Bold], {-5.000000026794895, -0.9999998660255145}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"norm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NormalizationLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["norm", Bold], 
                    Style[
                    NormalizationLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm1tIFFEYxyctuz5sUtBNoh7KqFxNKnvqumaUWsZSXnDdM2dGjLLUjQiK
LSqICsKyi5QZrTNjD70EQS8V+RpFTz0EFXQvukj60MWs7+hu6ezZ3F1nzjkt
+4cj7LLO+c9vzvnOdy4zC+0sUVMkSWoYA39KvHtW1td79252wAd3bUNNda2C
19X6lGqlPg+lwpeLoGyEMlJKKsFVyNsATSrS1/P2EKWE44eQnqNgo4u3jygl
FD+MAzOA3StVaf/F20uUEoaf2900Adg9JOyS/GKT2+1OBXY3QuyS/GKTio3G
geyS/KKXgrRtZnbQFu/x9hWluPJTkZEPrHoGs9OfezytU3j6ikHc+MmyMQ/6
baep3XXJsp7Fy1Mc4sJPLdUmAasnJnY//6O8OSTm/NTc5lHA6m5YzJP1OtZe
LBBzfhgbLeHjhd7M2odFYspPlfUGMzuIgbdJm2Tpw0Ix40diW1+MGxzzHsvy
hXRWHmwQE34Y6/OB1RcTu88IBeayqN9G2c6vb6yVjacmdj2Qp7jsrpuBbOXn
dvvTYFztCB9rje121stQtvKDdnaJwu6cnXUylm38FGT4KOxuLV/uT6RtDVv4
KUgvoo21ZWXaRDvq4yjL+WHclg2suhNwrKXJUn5qeWAq9NEXJnY/FK+2xsp6
BJJl/CoqroyHucT98JinVVtVh4CyiJ8/BdrZdcp4cdKa6wsrS/jB/OI0ZQ35
OuFqxfUF1rD5UfMUbDwg/dkKg4JrWPyg3ZUCq17z+jtC+jSrDAquuPmRvQsY
L76b1qI6EbqywEqDgisufqpXX0rJ8b6pqG2l1QYFV8z81Kq2hcDqk4ldrywb
W+wwKLhi4qd6tExg9c48XkAc3GGXQcEVNT+MjTkQ315TcrwDNvoTXVHxC+7V
0tglen48lIbkFzyP9z5830c/y8Kg4PonP2h3K8xnBAbsN45g5FFkReSHsVbe
l5OEjRXGGSnJLiQKP3+KIutHwvpr/xmBo+wtCq1B/IJ7ZTcp89leMs/lZVJg
/eFH9hOB00sKu68K0rbyNCmwCj2eVgcZD8zrAEF2b8hcjbdJEUX2wbKzipto
84lgrOsQYR0F5jYHnc6NZzIzXYdnZuTWORwZHvi6SOrvO8xLWtrYEqez6NTq
VbWvc7I3/Vqbv3tQcbl8PUsWl7dLUmoxL48DikR7tmTdh5xpgH5zB55zqyob
+0m+gHEgz+ttmTzshxauEaQfknPa0N4+hHwQXqa87hFC2jIb6o9bVH5DFHLW
hrwLAfdzDe75BJmfQ95VDIxzKysvTyfnIiLVR94FqKoyMshaEvzfLrhGO1zr
La2eED+yFgW/3fev6/JSPPyiZNxN4jvwedbXlmXjBVlXoo0DkUq+y/cdnst5
EeJcJMF9HYI+epG8H9Lfpv72H14FPHwET8fS02d7efOJR+qG5nFkLQ1yrgKI
fTXQd46Tvhrk22ULN5jHwrO8Crnc5oKCxtFBK9zf//jPleSX4PoNPe4iOw==

                    "], {{0, 25.}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", ImageSize -> 20, 
                    ImageSizeRaw -> {40., 25.}, 
                    PlotRange -> {{0, 40.}, {0, 25.}}], 
                    TraditionalForm], {-3.000000026794896, \
-0.9999999196153085}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"gelu\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["gelu", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    
                    Rational[-25, 
                    2]}, {-2.0000000267948965`, -0.9999999464102056}], 
                    
                    Offset[{-12.5, -12.5}, {-2.0000000267948965`, \
-0.9999999464102056}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[
                    25, 2]}, {-2.0000000267948965`, -0.9999999464102056}], 
                    
                    Offset[{12.5, 
                    12.5}, {-2.0000000267948965`, -0.9999999464102056}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-2.0000000267948965`, -0.9999999464102056}], 
                    
                    Offset[{-10.5, -10.5}, {-2.0000000267948965`, \
-0.9999999464102056}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-2.0000000267948965`, -0.9999999464102056}], 
                    
                    Offset[{10.5, 
                    10.5}, {-2.0000000267948965`, -0.9999999464102056}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    RGBColor[0.33, 0.33, 0.33], 
                    AbsolutePointSize[3.5], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2.0000000267948965`, -0.9999999464102056}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"linear2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetMapOperator", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["linear2", Bold], 
                    Style[
                    NetMapOperator, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    
                    Rational[-25, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{-12.5, -12.5}, {-4.000000026794896, \
-0.9999998928204116}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{12.5, 
                    12.5}, {-4.000000026794896, -0.9999998928204116}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{-10.5, -10.5}, {-4.000000026794896, \
-0.9999998928204116}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{10.5, 
                    10.5}, {-4.000000026794896, -0.9999998928204116}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    RGBColor[0.33, 0.33, 0.33], 
                    AbsolutePointSize[3.5], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-4.000000026794896, -0.9999998928204116}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"linear1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetMapOperator", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["linear1", Bold], 
                    Style[NetMapOperator, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {-5.000000026794895, \
-0.9999998660255145}, {0., 
                    0.}, {-3.000000026794896, -0.9999999196153085}, \
{-2.0000000267948965`, -0.9999999464102056}, {-4.000000026794896, \
-0.9999998928204116}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 8, 21, 25, 25}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{29., 29.}, {29.5, 19.}}, 
                    ImageSize -> {387.9999999999999, 103.50000589487733`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{768}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3072, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3072}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[(0.5 #) (
                    1 + Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 3072}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "add"], 
                    NeuralNetworks`NetPath["Nodes", "norm"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "gelu"], 
                    NeuralNetworks`NetPath["Nodes", "linear2"], 
                    NeuralNetworks`NetPath["Nodes", "linear1"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "add"], 
                    NeuralNetworks`NetPath["Nodes", "norm"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "gelu"], 
                    NeuralNetworks`NetPath["Nodes", "linear2"], 
                    NeuralNetworks`NetPath["Nodes", "linear1"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {477., {70., 76.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.864374162913438*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"a17d30b4-d0df-40f1-a221-33cd98683b12"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usage", "Section",
 CellChangeTimes->{{3.8643742644313107`*^9, 
  3.8643742652096863`*^9}},ExpressionUUID->"f372ede1-17ac-4415-9054-\
126d5e9a56ef"],

Cell[CellGroupData[{

Cell["Feature Extraction", "Subsubsection",
 CellChangeTimes->{{3.864374453437297*^9, 
  3.86437446136443*^9}},ExpressionUUID->"a0876d35-6ea8-4413-a111-\
36b6e8fb6e66"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"embeddings", "=", 
   RowBox[{"net", "[", "\"\<The cat is on the mat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", "embeddings", "]"}]}], "Input",
 CellChangeTimes->{{3.864374494115741*^9, 3.864374508601265*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"7cd3e698-3aae-49db-8a13-413c94ec29ec"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJwtmQc0l////glRKR+yIg00NKXQvjTQksxKaEkaKopKGSmjZGYUigbSsmeI
QkohO5v3HvdNqJD0e33/5++c9znex9t936/nuK7Hxfxj581PiImIiEwmryPk
9b/vvxh6f1i8gobUUqGIKF+I2xebxpN0uQi6d2TVk500ZltI+9ebUdC3uuOU
vo2HnJZ4I+keJk6ohkUbV/Ew5XC/2kozIRYaKK4cSmlBtPiKxQI7JrSkq4ak
S3k4qlcwyUlNiO2SMoFrLjKx7MG0l9qKFeDOeP6iaFcHRNLGgwPHWBiqUsi9
MYOP0PUFIprkfkPfnToak3nYFO/+K8q1GzpN6xbK3OuG+CTbZEkuG75HNOyS
4vjISfubXD+vFcKN5bsVHzBRb/gnTOc1D6cVHIzqU4Q4f9AtdT453/X6xFVb
aBreTjtPyb9vxPNBrmj5YB+Ky0IcP6zmw+1sB9Wuw8dCr74F8Z+FePKm4O2o
Cg29F03d1BIaKsE1jl86hXDi9SSyFbiIa22exAeN0J2zLJSXU7jafspjMZML
I6P5NvKOFE7aj24a/snDHY1do8oBPZhqVp1Zf0CAC49CxyouUAjx91Qq8KSx
JO7Vxw9TWKiO19Lu6ObB6ZV5kM5hIZi2xTlHlLsgjqkQ9WSjW8NwxjRbPqZ6
P/LL2Ej6Evz1s3AehcoNuTk+5VzsMAnNrshsxUOz7r4A0h/2vF7GuWge5KZM
U939vhlWRT0t3hQD6pOuinYzePgcciHpHoeDrR8LWEleAlwK3heQaUVhrsYk
9g5vCn8+2ZXpWPHx6Ni8iSavXsybdDVp024a6RKDe1j7KRzwdbp13YKHRP1V
17Ypt6BqRHVJlBITyj/eb3Nv5iFr8mmpx/so1Ow833o3mIado2X5z4X92MCB
f7kCjSCZRY+bgoUIj8s4xjXkYCC66u7KZX3YOV1fe80WLvTEimIqnQSo+l2g
pHGhF1XbE99xmzlYOCnbIU5LgIVz7raXbKehs+KFtA0o4LjJpqSZPLR+Cd+8
x5fGCyNzrR+LaLy5mCH65AKpu6GPVt1KGr6hXXyDASGq3h714RhyUV1ypuxo
Ao1dLwyaWqJoWO/3zPUKEUKxtenE0XOkT0M7N5sr8PHKWCQrrbUHPy7+yayI
pMCqqOh0SOaj0i7YTcq8D7wATZ2b/1FYfNaPu/cUDXNne/mzsv3IHt01/Muc
Qt2ezIMFZC6PMKdrukR3Y7b4hK71HRqjK/6lmRnRoL+3n0l6J8C27lAxxTN9
aDg+f+57By5SrZDG8RRgq67qCZXTDbjbI1FwbFcfHNw2aJ8+xYe9woZmDXka
LXckZ6YFCIHDA41cXQ4eO74e+s+OhuSvwnaDONIv8wPe6WRi1/94KKyyo2Ax
55NNPOnTDqO4hRG6Pdj2Zu97jg+FJXnKTuaH+Gg+Wxz9IaQXrdevWR8J5WKb
t5Oud6cAZlNenPovhMJkmebPu/0a8dEvlJrU1Ie9ajPdNm/iY9Ls8y/fptUj
/c6HlkX9vRgp5DRd8+eDmV9pfMqY1E3xrYysLw9+l14vtszqAntbQ9qafj7U
ey/nyelSiLRcFbbZhsaBHJ5Hg3wrFh6YT+ndY2LDkdkxsmk8tLkeqrixkIuL
hsu11j4RQCk0blXzaQpSE7dXLL1Hgf/QLdEqkY/R2pXBhlv7INrwRd7BjcIL
hRFG7Uo+pE+oH4xR60UvKyg7iBbA5saOlcbJDIw3zm+0jSxGTsrYHmdNGvoP
OCfXVwjRcfRNzd8mDoqvZ39b9U+IA1NcFeL2cvFYNzX9Re53yOQs+91zksLF
g4urSsd5uOIVsr3qfg+Gjyx5KrGahlxqiszRcSFC/kYnuZzggvt0l4qbGh+p
7ec23iwR4s0uO5NPM2kk/EyZc/x+A2Iv93+eerQPewJ9lHSO8eGT32qaRVMY
f5r8SHdMAPYj3dnCChaKarVjB0ldt0hz5miOCXF91lfuWn0agYss1G6waRjH
qt24818n9r1innskaQvrA8xjzxopOBfacItjBPiyOvT1lwom3lSOnqaSW3Ev
Vib4bRsTxtPsvhvf56Fs15OqGJFmnC7KOfgmhAEJ2zAbBTI/NXN/fJnhSuOH
mLLBPT4F+X/uy8S+Ed2UqzRkV1A41PXUR+qIAD+PJgey1jCxe4rakikNFJ5l
PxB9FS5AvmpO66RcJs6Vnch5nE705cLu0SxZCjmLxW+tM6RRPLbFI2Q6jfjk
VLf9IzSUtVWCzjr2I2Jb++W/ygJk9ixSyNhDYWmrZbWxE42xFEnNjstMeH2y
0TgezIP0rVleK1cI4bB6DjvkKYWo8QSt7V18zAjpCrNl9GG+2F0UkOsvt7yz
6MJ5IRjlarNaf7HRtP3Kr5TyTvxQMq7Zf4KNTRMmm/+Y8HGz+ea7HWTeLc9s
CO0J5iPB1WfzNrk+zI1KP8kOJdfvfpr65x4fDaz4SQvU+yAnc7DwWYQQ9wwi
52mp03jdNiGiyaHxENdvZviy4SC7zE6QzcdexbxzdcRP5mru2N/sTuMcv3hy
2+p+sLJU1D/f7oeCtjtH9DENiE4cHI+jYfpWfuTKIyF0fEKv6EmwUWHoWfXX
mczHD4ey1CwhPm0Mv1VO/PDFmn0dXAkKpzNizfQ30zgrapOd9pJCqgrr79g4
H4emHnU3WM3AzDsdoXvciO4EhWTX/6JQoqD5oWuADz3poLevnnOQbFeco3RI
gN7X83eGG1CQ+9v/aWMZ8YnNC7WryfVmNC5f+SWRRlezR86XMjZidwWqxLSS
edzculFsSIgv3oMFivcpHEtbMpfK5KNjlZfTY9c+LDUqVefcJPOefrJOlPjy
G7kZMU4+ApzMWHn11rwOWEps7XtAsyDHVD52WpKP+rO73hyeSqOgLjfx4zEh
8gI8dAVNbLBnyq7mBjdBOY1x+441A3vNP2WMzOTD5W7OzLRPPBQ8cPm+OFQI
g4Eg/aTfFMx8X6SWzaHQXx5n8LiViyv3DC8FNrVDfKeD6TvLZsjrhM3tyWPA
dKrYnJ/DPPjbrfvccI7GpfpEbfsuCv8VGiZszeDDb0lAWrwIDVexQ+HMTUIM
DgknRtzY6HztFXxhqANDEpuD9ZawUZwsfr1lCdmLf7c1uwYFoDcYVC4vYOAV
K3c0r7gEwlTRbDntFjit2dK8UYOJ3n9y4e/qedg4y4Ab5syGxOEOzbHnfCze
wovOaxZiubHWrNcNfcR3b3/oSeAi//oK5pTHAjRlzzpd+KUFO45/FhWeZ6Jd
Xe7MvkIeZokY6gX4UniwTbj70lE+bjybPCnvUS8uv2a3W3Q3QuPTRm0FUQaU
o2YFrya66N06OrEitBWL1HRVZtcyMXNoA/Unjof2U9wNS4/yMHDooIKCJdHD
GMOrt4mO7Ip+njVlIU38zP3DvmqyRyJd6xtYxJ8rJqI+OQkxqUrymA/p21bL
gVj57zTW9/40/PGGgqKRW9OOKQIElqhd3WLBgOJWXQOxyxTWZj7OGdAlzzGw
+0/A8l5Ih30L7/+PhuPSRq9714QQX2QeelqRg1ZtGzkJtw4M/3lVc20yG1U3
ND7EEX+OaZc8+qeUgm5p3uWLJgIUTVyeGSbOhHzY+D2bSX2g//nSIVpcqIsY
by+wEaBzrmtchkkbFBNKdV6cZkHJUlR7UgEPc8ZisxOuUJg1X9JQciMfp6z3
0XabeqG4+OS1efsIV5yQZBwiftOdeqfS9yYPzu82/MgvoDA76sje4SoaPk+C
sG1XPySNVk2fxaVgt8s7dGuvAGeswr9N9mMhIqBnTgfR6ds//Eeez6CgfrLa
ayKSC2e+w5n3ZwlvfH6+QEeG+KHWvMHSqh6U2G0Vib3ajNvXWrz5nxjYFrn1
rm4/D7Nrbp0bIvryn/nKfefF+1ESdulAvHM/Nm/wpK0m98L+4tcmlTgONP9V
T5adLEBYYynXmsxx/I15BceKBBCe7B2fvYCF5NLw9ilnuxB4a5FxciQbSvU+
UD7Nh+iKjzsqL1I4cl1la7YWH/lZaWuyp/ciZaO/ZOseGgoGJlLDhCPCc0tU
Nh/nYUalg2b0DhbqbLa9txfjQ4Wxsm/PJcJ3loetHDeQc9lUJr62JJ9rZ3fo
fuyEO+OJVD6asMk0+ux2bQYWD+RkLZnHh4fKZZcM7V44yP3RkM7iQJH7O2i3
vACy45q/H6V+RaL/WebRgG4Mr1T0Pq8nwKyzCpMz/rRCXXWoYJ04C98+JG2X
CeJhbPBa9a0AClek1IdNL/FRqDuxuLy2F7xNRvPvDlGYkqJh4y8tRMzYdm7o
Txb0NfJuXKd6sdlzlvkHNS52fVKvzLUQ4Nb1R4/LHWlk3983jf+OXK/j8zJp
4sspE1OaR9ZSGAgWTjfazcMxZ0Mxl/udmNCPzPvvLQM//eaUvVQn+/P9p2Y5
4YxTP3Su7iF6/OSF3Ku/Cym8bj/TZ9zIhUF7nUTSFRr1ee3Sl8Vo9NkYVJbK
CvBH+cSoiw2FidjWvL9Ez7R6EsZL5Huwqv/JgahHzZi3fGWHeAcDEYVP+y7w
eFAtnJ8iuoRCGWxrG6aQOsvOd5WK6UCjxUXpm+EUJCQ+98vF8rHIfrxufFUf
FJ2WmxYPCLBfsH1hdxoDTv2dpruXliBC0X7m0lsUVgS7tyWf5OOCxMmPTW96
sc06R39iVhPeUu4NX9QY2HOsQG76Qj4kngWfOnGYgnmN69SsDpJf9gY7Oxn2
wDqnaMSstAm9iZumrT1PPm9ZXqAqzceB89l3LDt6MG3T0yu2NzmISn38cfg3
H0u6hxsfiXDAHBK7M4v4lBdH3VtNigLX9MTRGGsawSI3zD8RPYsWyvhIf+Dh
UNi6ugwfGu/33UTffBpxDQGD3YQ7ZOd1Vnoa9UNvrWNNs1kHIgNvBNZeMce2
A6UT1gKiP7k62b6UAI77U3SYz1gotUj6YvKaAqU3+k5JTIApTl6BC7cxIO2S
8WV+XCvsW3pO/2xkYkbNaOOcWB6sdh3vlNZsg8zRk6tZ9iycg3iiWCYPe7KW
Rg1vEyDq6Nv9Yw4U/OVuR+USXz98ivohsZZG1rql4Qf+68edTZaX0i/1w1nz
1t0f5Od6i7JuTPlLIcalM0JKVIDr2xsXL/9EYer19xdOnxXA4Hh9nYoVyc2r
Bgvrw2hYXe63bbSnwehId3D8J4B8ZG2lmlonQk9sHvyry8YbjfQrLav4OOrd
/+7SKwHGkziS0olkj/WylL49oHFoetonB8Jf8vrhU4vSebg88V121TYh1jqF
ZJWv7kG9m2KbvCYHjUyf/Vbv+NB0Mors3EJ8M0H/yGxnHgIVsjX2GXVhifaP
xxPK5HwznhhLxgrhobdcNvEEB225K60eSzejLDrvS0Qk0fcKpdw1Inx4tnvo
Jj6ioGekVZVYzYfAUam6N7MPIrYvundO5yH7j3DzS00hfi2sX2ObTyG9R1I1
7gyNBlVvwap6MgcXHfrvh/Oxau/Wctm/LcgX+dwZFcBE0+ipFZWk/lf3nryW
TneC/ThDZJ0LG9Jfz4dNJfl1LHVRskRLK6xjZt40GmSiNUrJ7WMYDztVOz4d
WU+heGX6lFEyR/kiS02uz+1HYX7o1dCBFgS4Dpu632CC/iT3vCCbh8KWc5l/
LAlX+2q9zrlOQaTh/vzNWTxovtlwpY/VhE+PYk/H3WBAKjH0CybzcW9xqeb+
DVzUq7a2Tbwmczmc9aHJhcKal31XnEYoeP4ucWTOEWK+V/F+6wVs4OOFp28+
tyL+jOiCjUImzs8MXZEdQXRMzGww5XsTLPecm3h0jYHNgtvyi6X4MAp1XTlN
0AWJ9S6Hg/LZyJ55QsPZm4/y9on1RTpN2Hgi5jhPi8yx6Jb5q9QJt+5wsVAD
6VORr8bgIIXabM9h+Woa97afKb/qSWPu14/H80kut18YGrhxiwDW+HDl+UUa
A7mtuxIGKBxfkPahuIePoOJ7pxk7mlG7sV5CLpMBL3HvpzW/eDDYbL/7bT0H
n5cN3+p0FSC7SeJnxl4Ko0afDUx9hFjv5Fyar8HGgINB4UbtbzjyamUZ81MH
Hpq8jL0yh03yZMTsTg0+Pg++sEx2a8cOGbtNpiUsSEZF3crj8xCTVTtwlexV
wZHFJ1nE/07z/VX3X+6BVepll8/LWnH15tnpg4+YWNwVmWH5koelMav3C39Q
CNos1D4+WQjDpIcrHrBYGNl6/3DzTcJLP14XbtrDxNiWfM6bCh70tUfrCtlC
vP8zWp5uRmOxT9WfY2L9aFmacCn/Dzm/pE2u01IhZM3VpViGbJie1VgosKQg
0zDPTTWHBwth+9fvRd3ItZ54uTyJwpMTCdeOM/lwUFI02TnUh4Qic8+01l68
0L1xUFSOC42d4ZMK9wiw19ZmW36REAOJbu9+rKPh1RB+wOgnyQ3vp8ueXUXj
VqW0o9UvIdQOy0zLt+Lisnq101pxottVWvFDhMsnjalnmxwlOTOokNWjRnRG
1SPn2ishapcwchOjOPhZfOPZZ9dGfPvv+bTh6j7YHyiwnG/Ah++XtPvMvd/x
+ZfFt2R1FhIuXD6jF8JDAPVc0/IChWTLwu43s/mwkF39qUnQg0rRkIdvyV5+
rZpIMV4hwJLk6exrWQz4mDkbDg0zMZq7b7NyIw+rLbzi1hwQ4oXAQ9srh+zx
AsHlKeoCnN6pHvf0HgPXNsu/S0jtg9LXk09VA7lYG2OdyIsQYNddtbWLJYnO
J54YS7AWIsB/9R2TXDaG8q7V41ITXO9cM/izkwFb6d2rRpX4mPbtk1jgEA9y
e6YcrEsWgmZN78mSIHzmlzh2W46GaFyexZMbQuLbsk7LFnKwMXIweL0phYau
UNu4BB5KIo3viph0485RjsKMIy2wLJz1umA9E7X38l5tqyZ7N/UlZ7kthUCR
Pv2gOh7sdVaYfl7Qg81uSZ+qCXclVRm//e+dEL1Fwxq/KjiIXpOot3gfF+uj
etQ+FAjQFfyR0UA4csnctpR5zQLUG6yaGZtHwehBVkJdCo3r5+ZI75FuIXuy
KqpAlonnrzjylq083Jp2/m1kMA2moq9YpDkNeV83j8BuAWqGP4+uSKnD8cd3
HfYP9ICRe0j+dQsfGTsyDqGZPKeKTWfNQwE0/kZOj2xiwvXKvHD354RXzptO
+kpy3UToNPOImQyU51YnDN/qRVH/ZcPXfRz4pF179UBbgFCWaiQ8KEwuWvdu
yVaSO0ziPKxMehHO9ZORPUYjMyfLefbifvD3dP6u9e1Hesv41I47FEbEzfP6
ffiIj3lrEDvQi8La1/lHXjSDeZDd/bmXgYDlRQMPODxsN+xNC+9vRYlBYvyu
CSY+liiaDt3l4aW+wqzshHb8Z3lNsOozCyHhdvkff/Bw9MScp7di2MgcP/4p
vZSPYxonUcsU4sLV0r1VWRTG955viFAVYE3pSFGDLwNXAx026S+joCBitspz
Jg9r+soipIo7IMnp5ZxmU1iqd2Mhr02AXO/4cd9LLDSb297ONyd66MfffMiW
hR2i8V76Bl8Q69bx6o4nhUyFtJj4vXz8OblDI9u5FzNdcyaSoxqxcGJmnHgn
4adML9uM9XwcLIyNyCymsDq4yWgq0c3MsAzKmMnA5APlv/TQDewaNbeqY6NM
+5RhWDAf25f8elkX3QUn3pctxYlstKbXBhi78GHfMMfweAALjVdo+y7CVU/L
hO4nbgtxVt7pnH4o0QN/36XvD9CIfRT/Na5fgEqNR7evODXBnm2/SX87A0zn
Tu/aWXwwS3Z8TSfcKyFlIOn3qRslXYd11K6dR+7q5TosPwq3FbVvLj/Hx8Cc
pL2173qhKVCLeC9FQ+qkVcwbWyEKmae+zahkY2PhIWcZ3ybMPWb2u3gfA39c
Hxd+IzlrwZO+We4RJOdIlc2QOEFyfI2cuY+MEKMN6wfe1zTDc+E049ghBmye
n9eienn48ukfFbSMRv/juEk8hhAhi8+ZflnAxeu643a5HRSaRm7mbMwVwGWa
U8scBRYc8mkhl+iZT9QhxxDCZR+Fryd26/CRnsJiNRE+tpm3o0lulxDSKs7d
KVFsRAlT71gQfiqwb53lsUoIvx9hAa+t2Ci9lXTLKo6C5otjV7QJx/wT+zY3
IKIPt8oe+oiItMDUY6AhexoTlu3B4mjjYVsPfanDqRttvx8GqnSwEXbmxc+Q
SD7+PpY7/MiQwvx99r92XeOh7sj9mUphXXi0R3hDeh0Tklgwu+8UD5/NeLKK
s4Rg3VS8Fbm2FW4zKOe8Z0xUpL4Z8kzloaGKYbr2UC+UJdSHFao5WK3/5HEk
0cU5Ej8vHzQi+xVz59kpcp9H2htkT2nw8NwrLqb/MYXzYWYN6q188E+nR50m
+T9p7hf3LR5E5+sPhAZPoaHFy4iJnk/yQuuDwymyXGhud0g8Fy2ASZZjf+Nx
cv6e5KYVF3vwJ19ZjzLmwLa5J/VJIx/BB9+lVtf+7/8UiYHOfgKcnLG8Tiua
iQGZWc37iN9rjXSt3ScixLA3M+JLEwtOlmrNspFEnyfWsZUJl03qpHVM5wqx
VDh48XJ1O56U/zMMa2Zh/UnDM/NHedDZ/F1vNtG7hfFbfy1YLMBsdZm/gU8Z
WCGD8/4fKTSKHpRb7kj2t31E0L2dCamA9xGTT7VC7vxl23NFTPh5ZN/tf8zD
QHPfLYPSFiw5vTCs7hQT2haXo7YW8SBj13o4zbgFkVGpH6pXMJFS2Fr6Xy0P
D1aYaCQPNOLDPbG60CkMnNnA5Xsv42Mkkp/wfhfZi/bCknzicyu+rQjW+tmF
1+PFjw9b0JAcCYhOdKfgqBY56exTHtJia09aVLJQ8fVQhcsuogN3NGpuPxIi
L9egdCigBxUPPGJfWHBwcnFDdnw7H7fubNP2YbSCu+W84bERJs4YjGk3kfu8
T3Bfv0xKiHnrUpYdVGSCn/h0QdmG90iYe/GoD4NC5KwCXngPjepObck9B/oR
4RXNt1YnfVt7/tYeLhfPlQO2a83sgJFDYg/TtxXplZnTlD8x4VFJPWU/5KE5
6Lp4R20jyjYcr/Ed7UNJkvHKh4T/J1zTHn1lEm7XnXCtbRQgcZ1E1zMHFqpq
VJX3RjRj9lHGmknNDERf61l4SMBDmUzhxxwehRpT4SIbDvHjxUNu3ZEsfFq0
KcRDh8K/gpCMnhWkvvbjGWWLO5FWwalfnkkhziAu96aCAOJKKlqyFxkwGuS+
67cQ4nnkpSV5ExTCzk4EzqynIVTtML3vLIC/Uv2Hm4SfN3Yfs8+6RWMoZen7
Bb/a8fz+SYvEPhbijnyM2kPyQuzht+IGtylY/ppT1ebBxzsf48CqHqLDGy4G
XftO+PmBvb3UC6LnWklaR34yIRp0/crGOgaKyq4YPSXPeTrc9m3PTwEUzheq
3dpLI4DllWpI+JEf1pH5+iIP9dI5lX5dPJx9Jbd7gOSXN8H5G5LI8x4ZZ586
p9qLSiUvd8kUDp5JD2ssmk541jEkedkACx/rT7vMIvn/4RG58PuEs8quW/Ss
IrqsajTu0RpIzrtys05tPQ/Kcvvkbh6nUdt8cWM88SuD72kG04iv7pjcc1iW
ovDL3Hf/1GEBqs0yDHtyWHB7dU7sUCHxa+8H1qfWCDDhxak894GBu7KG2x/6
ClBV9s3mBLn+mvZdwvdBNLTXa6jvPkLyiML8T64pFASju9hOhPOTXULfuRh3
YoH+18vDW0gucJp5eWgtH/SZ6GlF34SQe1b1qt6Q9GPPsxtW4zTc5v3K1Ev6
jvhfIybSG1gwdx/9kxNP6jIjvyRnEY3jdXfXPyG/p9N56cTWXxy4e5Z/zOf2
IW/XpMWVL7los4jNVn1OeHTZb7vyXxRQdp9OVya+OlSgo6vAxuDUs7cX/qRQ
1huwLEpOiMTPfoVmEmzIrJ78OjeRxqOCwmy/3f0YrCwwao/pxz4R5adPDzVh
9xV39G9iIDN/aketKh/3nVY+qW3/ihmSakdU/+vGapWJmU47BHhe9TnJKIyB
nIl3w9em8nDnjsN1hx4BFq9blONOeFrix7qr+fJEz/rOK75/xsXYw1UvCh5Q
iK3OXjG7gI8Xm1gKeb59cMnaVPiWcH+nxpseZ8K//+4PNe+5x0PtP/fvpjE0
VOQW7z14mYaCIWPrcpKj7owWme2d3oTM4MuD0UoMOMo7p0ou5kPPRX3DHdMG
fNGwHz26qQ+bP7c2hzjzsT7uy6ywbRTiJfTM/cn8sTXO1L8+2QURVTObrD9C
7NAX3R9kR+PJmU9256b2I7PT8JulDA2nYyftb7oJ4VWrfyBpMqm/+NCmq1I9
0PNx5cdN4+Bykvzaz+l8LLltwhmaRfZl6SXbhA8kX8wt9Of6tqNsjWXzJFcK
e1tnHZpK8tWNvHzRw+M92LDrtOmSbKK/tSdnjSb3oS6Cc+/ux5dYLzc69ZAM
0dMn14X7zHlY4MN4KT9NiBMtvTcOa1OI3qBj/3IBD3timFJ3xDvRbZVks7uc
6EDH3ne/DwpwzE8sbc4CJj7YmYWkfG3CPl1VyXduDOQ1mu2WnMpHW9+Cx9G9
ZH/n3o5MrRJgfNPVxmmGLJwWTKsclWpF2n+erFPBTFj/2FLBT+ehLWGU5beF
xoLm6OJlqymcFr7+PjLExV1Jzt/t2U2w0d3LNzvFwMu16znj0/kQ+X9fA+j1
kH9j3Nv2/9+LiORkOLpaXWlDRSu1K8+dhfzuG/eXlpL8fm2FRooKjYpnbYd3
JwrxLP7BJaEbB2MJfxS3L2yC2I/mrzUaDGxqjJLQ0ORj7e2PRfIbaHjMNR9v
VKGw3K/gVko2F78mn6gZXMLB741+UZPlBbibqnndSpGCd9xwueAahSkHlSuu
7+BDqjNaudKuF6uOTMxRWPAdXObikiZFFtTz5N5oBxBO3izheAYUSuavX911
nAfzO0/61it2IX27RNHoNBrzki6oNTkJcSlTMjSVxYZWQvkVeW8au2bMsa5S
JbnVu8pY1EyAfA36xyoPLqQfLdDx/ybAsrMmA4P+FGx2GzZ6FHARXN7zfjfR
R0ep80q68RQS1jon6yn1Iflw/KmDulzkn7mu+PaoAKyYsRUP71KIcVDnhAXw
wZ2xsqpVtA9d0712PcqhIaKvlWu9vx+t8yJHex71Y6p9nugRZguYVvNNvK8x
EfDrsV5iLvHTvwaRfiSfbVvmPc11nxDcafeq1yez0enb5z7JhEYhHXhcd3Y/
3j9qXlZ8rR9hYVcux8Q24YnXF9VSWwamdOxYMyHLh9LUkWUzxig4sMV5aguE
YE45pBOgy8awoe3YsDHhw4U3Hl/fTSH1SWGB7moeKuzHc7UIp86d3rb7ewGF
P7fEDxia8+Fc4h9x0KgXckWTfu98R/r9S5wfTvLEe6WOzpsCNhxWiPouJbmp
5JjL3cmiFHKYovcaPlN4uWXu02RXAWwv6qean2Bi3z3jbkXDVlwPaRJrecHE
U4OLl++kEP2XnxZ38hsF01cJi32DBFBe8qhwLInsRf9c/6DHjZjiR9PNfX3Y
mqbn1Uz0eU904MKkoWYcSW2xei7BhPgzuzPLOngo9kp+cekC0fmMl25+xM/V
f9RJbS8j/O5kOeTrSvy8dY2nLNHH0t5L+sd8hZhbcNpfbVMzGkbMMva+YsDP
9lzhsxHidyuKbzmvIDxtmf5AS40H2G57IM/oQEfN7+cc4iej1/mx79GP/9qM
WzrD+rGiSrHo7CEafEWD39JRFFqKgw1CBnlo9BtXqnhGuO5k9rHZxTTc819d
WLetH+Kl/1x0zFqh+8lvZ3k6E97PdoqlJPHw8+VBh/D9QvzzvJ4a7MKCbES4
zE/2Fyx7+WHd2po2HFCcYfY3hHDGkaPu92tI7j4v83veGQo7duZmSE3hY++1
+raC/B607JIMshjhomfpLOE34i+/J98MM8ug0JVdu8ZbuRl/t9/tOhrLwH8L
Q3ttJniYHe6ULPDuQ/+I8FfgBS5arEUOcG4J8Klysf8l7Wakqj3Xnp3MwI9l
hZsejfGwrqBt3aaPPajvzfG5cJmDdefLZ3ST/o+s0tG9VkF8+76yiKcaqX/n
6JX1e2h4TS/5sXGJEOWDn9cu4FBYlP06TbacRss7Deek90Sn7ks7FFsI8G3k
X4JAngnf+pNyMVJ8FM1jJuVlCjF/YW59pTTxp6TMi9+Sia5amRdE8fm4K69t
cFKMgeA/AeYrj1LQs/W0c2MQnvkQt/CvdQ9qNLr2hFu0IN3E9Fv8Gib+nbmx
S+8rDwHSTz5OKqJA8T2fvVgvwOfJe7hZDQxsfqX6WWwTheSvNSMfbXiY9GTI
5Se7E0t3iqTrCwiXn57c5/eBggpT04D9hsbzGaOPzBSEOOBfPse8nUL5qYHi
qaTPIfWpz8dP0bg5Or1p5hcKbyN/nUy7wcessS8fDuU2Y7H+gnXPOQzcKHQP
fcsiXCrydrWDEo1D5Rb2I/eEYBuai3VZcVBDex7UJtxbuSK+JqdGAEPGR3al
JQuluxI0Ak5RsPbaIjs+ifCfjF7J3+c9YPFcLS21aLxc/Ki5tEWIt5vcdiyf
zIVKcp3Wgngavwu+VcffptGqnP/wzTkh1l5nOhYFkn2f0z/X0IDGYw/GVV6a
ABcmPTavPdIM9pKQoo/FJIe0Xrw8c4iHpb7BS3+bNEFGqf/tJn0GbJtSW36o
Ed5/ZfRzjiIHuQ2XSg2kyNy0L3C2lqHgrhew/PpcGqHv/zYGkz7qvDky90wS
B3E+Fd/vpVNQmJsT4C4jgMWK8QcWxxnwmVkRG2FNfN/kYPShtzz8e+U9bNfZ
DWk/1wzGhhbQ+2MeSGgR3fg1UsKp46Hv+tt4P9EmXGxU2VQvy8BP+2rtLi0+
Thq8udaQ1YLtGn9OvT3OxBUfhxKdEh4mn9v6W4X0qezScY0l6QLMOv1lu4UE
C03GW4NcoilsfvgzMucVH5Yz/r1yO9aHyfNDC6si+5C2OFPM8joXJ2599OER
fbo0xhy0fEfh8iJHPX1jAbY0LpU/MEx4OtmTXudM+Ce+4YJZKwXbWfNX+T8m
Pv7px+6i7EZMOP6s2iDsg4TI1PWtuny8GX8o/162EYeo5fsvxffhrpho/TZT
kl/neY4u2d0OJZkt0SaZLFzYVs6NJHNdnei5uuMa4cCp+o8fEt5Jmd///NAq
AZb81XL4lNJEuPvPE11Sx/qwHKt+GT6suzMTjznROLFE7dzkSgqFBTONf7jw
MT9+ZbnoQwrHwitzfMm+Dobr7R150ofoNOO2f3oU1u9ozEzaSnJfy+D2m+6d
+DvyIUwwKsBunZ1qEq0MPF9d99bdrBReW9/mKbygoHu7voz6xUfa/H/lvsT/
9S/e+L17OoUDc5FrdJeLbZGfzq1LbcOvoDrV4+o8GNuE7rmvLcRs7/wIV1LH
oJ+tNkrzafTFuoQl5Avx1PDBzTU5HFTpzOu2SqSguLfgvmI94QFTSd+0D32w
bFjOf9fWQHgudMz/Rh/8YouNWvcTbsxO9v0whwX5KcsbCklOSzz7a7+BoxDZ
P6m0260tkKqgqSw3Jr7cud15JZ8H64lxi5dzSY4wGQ1S2tODIrxnulm6ot/u
yX+BGSwUNxx5l76ZjykWpbHBMUIoHPgeFRdKYbhlk/rCDMIRaw/GqW3sx+dF
rmn+fjRYkemymmtoJC49/9M2TAAluDl3y3cjoc2n2q6cDaFB6euL/nzYiO00
XF5D8qNXYbKpN+FyuTPfDPyZ6Dos7b/ZhOw1u/yZ6n0emCrzW/8u6MYNbFGQ
uNKCPRuyvl0yYmJ2Y12F/0fCPyezarbPphF/mO3vmCyE6O6ogzV+HOhobdVu
q/mOW1deDNYZsVCWqmidTXL6jJD76UPd5PndW256vBdg+UVZzV9rWLgYsWOm
/iQaYS4LLYa2kZxmOCm50I+NJ0sUChTte7DZUbxaZCMH/p2Rr+5+5eP5TKsQ
D6Jrz3uHR5lXBDCftlE+jNRVuqRubwo5/1bfRMugSRT80qI6PNy4yD4YY7JF
j/DY2db796UoDJYterrWj4vr2qf01mq2YEeizdnzakwkhgd03W/kwWp42rfO
YyRfyocr1fF4qKs+6HTrZA8SGJhp7dyMa+aHr/L+l/ey3+ye+4MHYWF6wTDJ
o/q9rIAn+kI41j7/mXGCjdSMUVZ3C4X/zvR2DD8VoPjZ+cURLCZqRx6cS/vQ
iw2hiwLUiT7yBdWzXhkS7rg8x+y4FweRr9WeaG8T4Nnw7FZbkudjFd+ZNP1u
g+xY14LSWBbqreuLopp4kJ+aYRcVz8L2QhmP7zp8WEwpWXErjMyvR8HPJM1m
7FMyfWiZyMDqL7/fuI3zMPigycCnhotJK6sfLhcVYkZc1tftT4m+X/u6tnVO
D570lilvUeYg38960t58sr9lF+IF92nYL5gLZ08aJaYzHMf3CvFO+M9vGacb
f0wzA77+Y8M9/cvMylSyxx2lH1NCWzDr8JbMyeZMKE0bFW/5wEPH59PHpM62
4HTk1NRoAyakxJafOvGJh6lr/FeD04zDD4pTov+R4opbXFUlOX+5JTN86k4K
Rs4LmOsCebBbe3jW4YYuTMiEToiPfcfrLnqluAUL4r5Vp4Zf8NAQLHw+QrjI
X0qU7UX83nRB2M7cWgFePPikM+dHDybL/7gzO5SDnOm6pwcm+Jix6ltcITgo
KPKLq5grwJlyQ+99hBf+6t6QrP0qxJxhi8gn7hxU+F+eWHeiGdfd+zqqEngo
FMtpvXqZ6Eb6/lkRPJKL8ru9Nmztws3HgbeaAtnYjLEMueN8vK636RHZQnRb
4tj9kT1ccOb1fi0/T7jeo0vMrL0ZJZezHrwbZaBBVe/7724ecqUfBIXOb0eG
7du1Qcks8NTW8mIIT570s6266d+MUxXuuf/7e0nrBVN6FcWDTL0isyC2E9Nd
HRS8DrIxsu6A3YARHynPYpPCxjnomlH01/eOAAsV9U69syX6ddN950t7Gku9
ipxMH1NIbJjz0EWOD+PQP1urPIUwijx31l6RhrZjn7R6Dw1ztZsFdR4Urptl
Hj2RREM3el34fN1+tKUwXe/ECJC9pf7GukgKMxR7PT9H0GjYnKZTc5CGkFF2
mw6h4OuV2fy0j/jj1qzQQKIzkRlX3uU10ij4r6PPwKwfB2rmS5XeZaJGizVF
5wEPjseyBlbrEs6K/fYoL5uHnl1vGHtvCnEwwEkndoDCq7115y7ZsTC59ZTX
EuIrA3HaF02vCTGiM1rRE9+D2j22L7wOc3D098u1z/r46MlfLVeS0QMZ3cbm
nWc4sArZeSmZx8d+Sd3dR+UYkIk9vsOc5O5wgy5llVwBqu4lzTWsZkIxJpkO
LOJhyYt88zW7hJB78CMgcYTCV8a0Hl8hjasxH/McDhO9PXf62fprDAxKeh2N
nuDCh7skzPy7ADY316xOi6JRN5vH1HGh8b5kusKKlUJcCVwvmPOkDYrnil/6
+7Ig7VRhoU30szioQzy3mAPzj3ff/XEUwHnk9u4nxhT2fbgT2lDShx2GK/OU
IrkY2yoUSMUKcH1y3LZ5ATSCPKQ+rFxP9DJC6ZliIrlv2NzobyWtoG3nejiz
mdDesKsvOJKH9SFnS7c+48LcdZWRCU+AUYWNdvIkH8zVNMs2ZTEwdWdW/931
PMiGrFT4OS6AzxSr3ds1mci6kNmmbs9D/M5LAhU5IbpEDtgua2fhc9wFz/XW
fFTOMYu8kySEV7p9oUQZybv7w6a+fMWGkaTA0v4KyWFPJgV1pTcgr+L0+8nO
fThvyQ88Ys+H+MXkbxrxLViz9Zq2xgEm7hv/u8UsI/dJHORLrmTj1RcV6cd+
fHS65LFyyoT48nltzW1y3d1jJt4RX/gIcHnT3SUQYvkhue4fJkyEttW2ZLjx
sENvqZjqPCG8a/rXztzZg0LhhcnztDl49bQgzrOSD4VIaf8qSw7GV6hue7VU
gJdncmWOa1KIuCurHLCkEdMyoi0jn/chKFjkk+NuPrr7ra/elfyORB+VeMmp
LEyf21One5uHvQHT1p0/QWHJ0WIP0wc0XNtKhYPL+zFn4PcfZTs+xub0bLze
J4RdWbXEEsLBx3Zs2d62jY3LCmulHMP5yLxedTG7SogJ6e216ttotE3NnGy4
juSnQwk7G8R4OHVmq4sdg4uFX4MKR6SFyNw49s+I8M0LHX60VTDhVzuxdW9s
2TBmHPXZ9l899Dx9+mvf9OJMs99s6zEOoo+qzE/dTPKES1JOxQGyd913T78k
+pur2f7MRLwHmqNrq7nGJCdt8tT1bRYirq/1xzR1Gl/fzL4U8bcPfc5/jUPz
uNjxzj9/NuFw7mz5BRGryd79/prj+ZuHiY/xyZuchVAPf+/vtYCCa0P7jKVu
5JyLkhyvKPfjQfmXFNUkBmwCH7tsVeTBYeuc/uMcAQK3LahXUmHj9gwLVF8l
e/ju6sHXhUJs8TQd2rNHCInBDU+NDVhYFn9k8NDxavgahqg4nOCixmT3+w8V
ArDvdrB+ehO92dqatMm6D8Mb9xSNHuBCWvWtKsddgP9GK16quHSiwjU2qdCE
DTubmsJB8PFfqdLV6gNs+I7dddv4kA/FsvOHi2uJbqydd3HtIgbexaiOz6rl
4vU5s+0qxQLsuPD0qJMjA+uEs12/DXKx1/zlFMt6AQYd1vmHzvyONQGFPVwZ
FvwbmCutA3gQnbz/wDCZv3daea2Nh4WI/tAvvEX4/pb4wim+YwwoezCXBRrx
wONt7p0pLsTHIybXSh8SfegbkEkLpVGY43ziqpcQhm3emZIrBdh7NfXQwoOE
2y3c1dLO02Q/RBZHN7NRGhY6Yz+TD+Zj568To0LoOo9UR5ziIGQg8c1ZfQHK
VEw59kspZHbUyQfF0kjrSlgdepPGU4n88X57Ifyf2sja7uHB41Aly2yHEC9m
ssaDvlK47fmdUTDchJs3bAy7AxlYNcFe2S/GR7u1f8bfB71Is2pfGU5zEBal
H/+C3KcxxdKKkdCBn+trTj2QY0Oz7fGfmtl8qLfkD7zYyMC5kVOe69q52Hil
6OHecgFCnCWLTNpInnj6Q2GrFoU7PVaK6yxojDA693NIDshb+fT3Zpr46Vjp
xkXaNCbmrXGML+rGt8pR0cohNo6VT/qT8ISPS1NcZ16+x8HIAfsYFVMBophq
h13I3rwv+rZCqprGm0idQy7H+2EeFHxeLrkf1PO2KUN3eJgp8pqVeYbUd/bJ
IxF9FJ44bPg3w64VaeI5ORG5TBz+Fnj8K+HSCWqC2XapFVfWbylb+56J0oZo
XaVEHmLL9xX76/Pw30P/9UEbhYjXeHjuLskxrqXyb5xEhLCZuGrnU0vBw0n2
gXgujcnqNYd8zRjQ+6G8X5TDRcGFd917qwWQZCj9fnX1O/LuuG8sWcHC2b6E
XyeiCDf+Ojfae4yJOYZXkwJu8FAh0R+qsUiIMDuXv7cfM1G+sc148BkPteP6
r1eS+/8f7I/+ng==
   "], {{0, 0}, {96, 6}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{5.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["2", TraditionalForm]}, {3.5, 
       FormBox["3", TraditionalForm]}, {2.5, 
       FormBox["4", TraditionalForm]}, {1.5, 
       FormBox["5", TraditionalForm]}, {0.5, 
       FormBox["6", TraditionalForm]}}, {{5.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["2", TraditionalForm]}, {3.5, 
       FormBox["3", TraditionalForm]}, {2.5, 
       FormBox["4", TraditionalForm]}, {1.5, 
       FormBox["5", TraditionalForm]}, {0.5, 
       FormBox["6", TraditionalForm]}}}, {{{0.0625, 
       FormBox["1", TraditionalForm]}, {24.9375, 
       FormBox["200", TraditionalForm]}, {49.9375, 
       FormBox["400", TraditionalForm]}, {74.9375, 
       FormBox["600", TraditionalForm]}, {95.9375, 
       FormBox["768", TraditionalForm]}}, {{0.0625, 
       FormBox["1", TraditionalForm]}, {24.9375, 
       FormBox["200", TraditionalForm]}, {49.9375, 
       FormBox["400", TraditionalForm]}, {74.9375, 
       FormBox["600", TraditionalForm]}, {95.9375, 
       FormBox["768", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.864374509287855*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0b6a8357-1975-484d-9bca-94b895f4ded9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"net", "[", "\"\<Hello I am cat\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.864374399445207*^9, 3.864374448120577*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"005a94ec-a82c-4a70-ba94-5b049fd57c2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "768"}], "}"}]], "Output",
 CellChangeTimes->{
  3.864374407399877*^9, {3.8643744409302673`*^9, 3.8643744489216146`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"fa1ddfe8-bcec-41ad-8a79-a2cbe4de3a9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"net", "[", "\"\<The cat is on the mat\>\"", "]"}], "]"}]], "Input",\

 CellChangeTimes->{3.864374523284292*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"6fe63fe4-7633-4374-be6d-10c8c5a04524"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "768"}], "}"}]], "Output",
 CellChangeTimes->{3.864374524252817*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"89ffb3fe-70cf-4908-93ba-0b708038f270"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate text", "Subsubsection",
 CellChangeTimes->{{3.864374271585512*^9, 
  3.864374283188438*^9}},ExpressionUUID->"a119f18e-73b5-4e52-9404-\
96bf151af012"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generateSample", "[", "languagemodel_", "]"}], "[", 
    RowBox[{"input_String", ",", 
     RowBox[{"numTokens_", ":", "10"}], ",", 
     RowBox[{"temperature_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Nest", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"#", ",", 
        RowBox[{"languagemodel", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<RandomSample\>\"", ",", 
            RowBox[{"\"\<Temperature\>\"", "->", "temperature"}]}], "}"}]}], 
         "]"}]}], "]"}], "]"}], ",", "input", ",", "numTokens"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.86437430234199*^9, 3.864374308362166*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f0442967-51aa-4539-adce-5f1970afb5a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"generateSample", "[", "lm", "]"}], "[", 
  RowBox[{
  "\"\<Albert Einstein was a German-born theoretical physicist\>\"", ",", 
   "100", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8643743610637503`*^9, 3.8643743610723257`*^9}, {
  3.864374542488515*^9, 3.864374545881707*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"b800287e-b062-497d-a841-c7d1808dc650"],

Cell[BoxData["\<\"Albert Einstein was a German-born theoretical physicist. He \
wrote a paper in 1846 Cycles of Light that predicted that the Sun's motion \
would be accelerated by the gravitational pull of the Sun, and that such an \
acceleration would be dependent on the mass of the Sun. Einstein's paper was \
published in 1846, and in 1847nergies were discovered, and the Sun was in a \
state of gravitational flux.\\n\\n\\nThe theory that the Sun is in a state of \
gravitationalIENCE is called the general theory of relativity, and it \
is\"\>"], "Output",
 CellChangeTimes->{3.8643743727436247`*^9, 3.864374582726698*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"0af8bf9f-a05d-4c14-89f5-6195546f5f59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"generateSample", "[", "lm", "]"}], "[", 
  RowBox[{"\"\<Nero loves Amo\>\"", ",", " ", "50", ",", "0.5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.86437467590511*^9, 3.864374724084591*^9}, {
  3.864374756690198*^9, 3.864374763214341*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"ab9ea27c-413a-49d5-898a-1811a55eeb5c"],

Cell[BoxData["\<\"Nero loves Amo smoking. He's a big fan of the cigar and he \
loves making good cigars. He's not a Typesetter, but he's got good technique. \
He's had a couple of great years with this cigar, and he's a good cigar \
smoker\"\>"], "Output",
 CellChangeTimes->{{3.86437469188937*^9, 3.864374730621316*^9}, 
   3.8643747772955923`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"bff2c24e-f8ab-487e-9ddb-8c482d32f753"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"generateSample", "[", "lm", "]"}], "[", 
  RowBox[{"\"\<Amo loves Nero\>\"", ",", " ", "50", ",", "0.5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.864374804020636*^9, 3.864374806281735*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"629c9b55-16d2-408a-b115-020f48a9e451"],

Cell[BoxData["\<\"Amo loves Nero's \\\"Top of tympani\\\" and the \
\\\"Youngest of the gang\\\" from the film. He also does a lot of the talking \
on the set, including a lot of the lines. HeAbsentee is also a fan of \
the\"\>"], "Output",
 CellChangeTimes->{3.864374831506279*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"04fd70fa-9aa5-4954-84f9-8397e48822f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"generateSample", "[", "lm", "]"}], "[", 
  RowBox[{
  "\"\<Nero is a theoretical computer scientist\>\"", ",", " ", "50", ",", 
   "0.05"}], "]"}]], "Input",
 CellChangeTimes->{{3.864374879100849*^9, 3.86437488645021*^9}, {
   3.864374945852792*^9, 3.864374946932145*^9}, {3.864374981560317*^9, 
   3.864375011637931*^9}, {3.8643750497964087`*^9, 3.864375054019495*^9}, 
   3.86437511178872*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"e48234ca-71df-41d8-a6cc-8baab1928d50"],

Cell[BoxData["\<\"Nero is a theoretical computer scientist at the University \
of California, Berkeley. He is the author of \\\"The Orion Nebula: A New \
Theory of the Universe,\\\" which was published in the journal Nature in \
Deaths blaze.\\n\\n\\n\\\"The Orion Nebula is a very interesting and exciting \
discovery\"\>"], "Output",
 CellChangeTimes->{
  3.864374900382235*^9, 3.86437496054814*^9, {3.8643749985296926`*^9, 
   3.864375024301827*^9}, 3.8643750696287527`*^9, 3.86437512579768*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"688af6d3-70c5-4091-9363-06bba0aacd9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"generateSample", "[", "lm", "]"}], "[", 
  RowBox[{"\"\<Nero does not have memories\>\"", ",", " ", "50", ",", "0.5"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.864375607254026*^9, 3.864375642964128*^9}, {
   3.864375676599374*^9, 3.864375676908156*^9}, 3.864375719948875*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"13493196-6eb7-4634-8339-671bd98fb8bc"],

Cell[BoxData["\<\"Nero does not have memories of the time he spent with his \
brother. He is also a very good friend of Ryo and is very much a part of the \
team.\\n\\n Reporter: He has heard about the memory loss and hopes to see it \
in the future.\\n\\n\"\>"], "Output",
 CellChangeTimes->{{3.864375633216412*^9, 3.8643756568407307`*^9}, 
   3.864375688795871*^9, 3.864375735553376*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d4d5093f-7f74-4e1d-8e08-4eb73382bf92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"generateSample", "[", "lm", "]"}], "[", 
  RowBox[{"\"\<GPT2 is a garbage.\>\"", ",", " ", "50", ",", "0.5"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8643760736818237`*^9, 3.864376153026456*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"e908f5c9-d825-4ddc-a2b4-3ab8bc341272"],

Cell[BoxData["\<\"GPT2 is a garbage.\\n\\n\\nIn the past, the simple \\\"no\\\
\" was a good thing. In the future, you'll need NextGEN to do the same.\\n\\n\
\\nThe only real keynote that I really want to talkJA is the new \
\\\"TOD\"\>"], "Output",
 CellChangeTimes->{3.864376087452086*^9, 3.864376165769073*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"107e9b3e-5c6a-4300-9402-63d6e9d2040a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"generateSample", "[", "lm", "]"}], "[", 
  RowBox[{"\"\<GPT2 is shit\>\"", ",", " ", "50", ",", "0.5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.864376112734582*^9, 3.864376114079418*^9}, {
  3.864376149876614*^9, 
  3.864376150437413*^9}},ExpressionUUID->"cff6e08d-11c1-4260-b658-\
c4e7b3814e07"],

Cell[BoxData["\<\"GPT2 is shit.\\n\\n\\nThere's no way I could have done it \
without a lot of help from my friends.\\n\\n\\nI'm pretty much the only one \
who can do421.\\n\\n\\nI'm also pretty much the only one who can do421\"\>"], \
"Output",
 CellChangeTimes->{3.8643761276049843`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"b49f2fc6-5c2d-4f9f-b3de-2f49c4e96f0d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 822},
WindowMargins->{{Automatic, 44}, {19, Automatic}},
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"85dd39ef-ee98-4d32-aa20-7609f9441cbd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 150, 3, 67, "Section",ExpressionUUID->"7bd0fe77-4988-460f-859a-7e8037afe23f"],
Cell[CellGroupData[{
Cell[755, 29, 159, 3, 45, "Subsubsection",ExpressionUUID->"9bfdddd3-56cb-4dc1-b3ff-7f69b538d683"],
Cell[CellGroupData[{
Cell[939, 36, 289, 6, 30, "Input",ExpressionUUID->"388d6b69-388a-4b1e-a203-6afcafa14795"],
Cell[1231, 44, 580410, 9440, 911, "Output",ExpressionUUID->"585c9411-8f27-454c-9d70-41c5b025fa0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581678, 9489, 392, 8, 30, "Input",ExpressionUUID->"44e6463b-e630-46bf-81c4-da8f3775bb4c"],
Cell[582073, 9499, 306869, 5015, 62, "Output",ExpressionUUID->"b0fc581f-848e-4511-a3f5-45d1f576f724"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[888991, 14520, 162, 3, 45, "Subsubsection",ExpressionUUID->"6ce8d48f-8c70-470d-836f-a99abd51e4df"],
Cell[CellGroupData[{
Cell[889178, 14527, 260, 4, 30, "Input",ExpressionUUID->"f8813dba-7578-41bb-b9cd-722f2d4d84da"],
Cell[889441, 14533, 41641, 997, 3621, "Output",ExpressionUUID->"7d3ca05a-a6c1-484b-adaa-b3acfc827ec7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[931131, 15536, 162, 3, 45, "Subsubsection",ExpressionUUID->"b0a0f022-63f5-4661-a496-2480d1497100"],
Cell[CellGroupData[{
Cell[931318, 15543, 303, 5, 30, "Input",ExpressionUUID->"ad77fcea-1c24-41cb-b85e-c7dbb6fa4938"],
Cell[931624, 15550, 125851, 2592, 221, "Output",ExpressionUUID->"0d9134bb-019b-44d7-aa42-c0b717a0503e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057512, 18147, 363, 8, 30, "Input",ExpressionUUID->"925f9e6f-9d4b-4b96-80e9-5caeebac8e08"],
Cell[1057878, 18157, 138190, 2769, 608, "Output",ExpressionUUID->"3b829dce-1729-460f-94a3-9be27e0746f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1196105, 20931, 290, 7, 30, "Input",ExpressionUUID->"adee2219-f6f3-487e-a3b7-e4ababd5a3f6"],
Cell[1196398, 20940, 146495, 3014, 363, "Output",ExpressionUUID->"a17d30b4-d0df-40f1-a221-33cd98683b12"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342954, 23961, 154, 3, 67, "Section",ExpressionUUID->"f372ede1-17ac-4415-9054-126d5e9a56ef"],
Cell[CellGroupData[{
Cell[1343133, 23968, 168, 3, 45, "Subsubsection",ExpressionUUID->"a0876d35-6ea8-4413-a111-36b6e8fb6e66"],
Cell[CellGroupData[{
Cell[1343326, 23975, 358, 7, 52, "Input",ExpressionUUID->"7cd3e698-3aae-49db-8a13-413c94ec29ec"],
Cell[1343687, 23984, 19514, 331, 84, "Output",ExpressionUUID->"0b6a8357-1975-484d-9bca-94b895f4ded9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1363238, 24320, 259, 4, 30, "Input",ExpressionUUID->"005a94ec-a82c-4a70-ba94-5b049fd57c2d"],
Cell[1363500, 24326, 249, 5, 34, "Output",ExpressionUUID->"fa1ddfe8-bcec-41ad-8a79-a2cbe4de3a9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1363786, 24336, 244, 5, 30, "Input",ExpressionUUID->"6fe63fe4-7633-4374-be6d-10c8c5a04524"],
Cell[1364033, 24343, 196, 4, 34, "Output",ExpressionUUID->"89ffb3fe-70cf-4908-93ba-0b708038f270"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1364278, 24353, 164, 3, 45, "Subsubsection",ExpressionUUID->"a119f18e-73b5-4e52-9404-96bf151af012"],
Cell[1364445, 24358, 834, 21, 115, "Input",ExpressionUUID->"f0442967-51aa-4539-adce-5f1970afb5a2"],
Cell[CellGroupData[{
Cell[1365304, 24383, 400, 8, 30, "Input",ExpressionUUID->"b800287e-b062-497d-a841-c7d1808dc650"],
Cell[1365707, 24393, 708, 9, 203, "Output",ExpressionUUID->"0af8bf9f-a05d-4c14-89f5-6195546f5f59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1366452, 24407, 354, 7, 30, "Input",ExpressionUUID->"ab9ea27c-413a-49d5-898a-1811a55eeb5c"],
Cell[1366809, 24416, 428, 6, 77, "Output",ExpressionUUID->"bff2c24e-f8ab-487e-9ddb-8c482d32f753"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367274, 24427, 306, 6, 30, "Input",ExpressionUUID->"629c9b55-16d2-408a-b115-020f48a9e451"],
Cell[1367583, 24435, 361, 5, 77, "Output",ExpressionUUID->"04fd70fa-9aa5-4954-84f9-8397e48822f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367981, 24445, 509, 10, 30, "Input",ExpressionUUID->"e48234ca-71df-41d8-a6cc-8baab1928d50"],
Cell[1368493, 24457, 577, 8, 140, "Output",ExpressionUUID->"688af6d3-70c5-4091-9363-06bba0aacd9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1369107, 24470, 391, 7, 30, "Input",ExpressionUUID->"13493196-6eb7-4634-8339-671bd98fb8bc"],
Cell[1369501, 24479, 468, 6, 140, "Output",ExpressionUUID->"d4d5093f-7f74-4e1d-8e08-4eb73382bf92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370006, 24490, 310, 6, 30, "Input",ExpressionUUID->"e908f5c9-d825-4ddc-a2b4-3ab8bc341272"],
Cell[1370319, 24498, 392, 5, 205, "Output",ExpressionUUID->"107e9b3e-5c6a-4300-9402-63d6e9d2040a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370748, 24508, 334, 8, 30, "Input",ExpressionUUID->"cff6e08d-11c1-4260-b658-c4e7b3814e07"],
Cell[1371085, 24518, 368, 5, 224, "Output",ExpressionUUID->"b49f2fc6-5c2d-4f9f-b3de-2f49c4e96f0d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

